# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

name: 1.0$(Rev:.r)
steps:
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration Release' # Update this to match your need

- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*tests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

#https://stackoverflow.com/questions/52312672/vsts-azure-devops-auto-increment-nuget-package-version-on-pack
#https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/package/nuget?view=azure-devops

# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'pack'
#     packagesToPack: '**/*.csproj'
#     versioningScheme: 'byPrereleaseNumber'
#     majorVersion: '1'
#     minorVersion: '1'
#     patchVersion: $(buildNumber)

- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'Build.BuildNumber'

# - task: NuGetCommand@2
#   inputs:
#     command: 'pack'
#     packagesToPack: '**/*.csproj'
#     versioningScheme: 'byBuildNumber'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'Nuget-Emptywolf.Stocks'

